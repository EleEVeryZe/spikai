name: Deploy Lambda Function Cadastro

on:
  push:
    branches:
      - master  # s√≥ aciona no push para main

jobs:
  build-and-upload:
    if: contains(github.event.head_commit.message, 'website:') || contains(github.event.head_commit.message, 'all:')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build App
        run: |
          npm i --legacy-peer-deps
          npm run build

      - name: Sync next files to S3
        run: |
          aws s3 sync ./dist/stock-marquetim/browser s3://spikai/ --delete --exclude "resource/*" --exclude "resource"

  deploy-lambda-cadastro:
    if: contains(github.event.head_commit.message, 'lambda-cadastro:') || contains(github.event.head_commit.message, 'all:')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependenciesss
        working-directory: funcoes/cadastro
        run: npm install

      - name: Zip Lambda function
        working-directory: funcoes/cadastro
        run: zip -r lambda-cadastro.zip index.mjs node_modules template.curso.mjs

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS Lambda
        working-directory: funcoes/cadastro
        run: |
          aws lambda update-function-code \
            --function-name cadastro \
            --zip-file fileb://lambda-cadastro.zip

  deploy-lambda-login:
      if: contains(github.event.head_commit.message, 'lambda-login:') || contains(github.event.head_commit.message, 'all:')
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '18'

        - name: Install dependenciesss
          working-directory: funcoes/login
          run: npm install

        - name: Zip Lambda function
          working-directory: funcoes/login
          run: zip -r lambda-login.zip index.mjs node_modules

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Deploy to AWS Lambda
          working-directory: funcoes/login
          run: |
            aws lambda update-function-code \
              --function-name login \
              --zip-file fileb://lambda-login.zip

  deploy-lambda-pre-teste:
      if: contains(github.event.head_commit.message, 'lambda-pre-teste:') || contains(github.event.head_commit.message, 'all:')
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '18'

        - name: Install dependenciesss
          working-directory: funcoes/pre-teste
          run: npm install

        - name: Zip Lambda function
          working-directory: funcoes/pre-teste
          run: zip -r lambda-pre-teste.zip index.mjs node_modules

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
      
        
        - name: Deploy to AWS Lambda
          working-directory: funcoes/pre-teste
          run: |
            aws lambda update-function-code \
              --function-name pre-teste \
              --zip-file fileb://lambda-pre-teste.zip
            
  deploy-lambda-quizz:
        if: contains(github.event.head_commit.message, 'lambda-quizz:') || contains(github.event.head_commit.message, 'all:')
        runs-on: ubuntu-latest

        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Set up Node.js
            uses: actions/setup-node@v4
            with:
              node-version: '18'

          - name: Install dependenciesss
            working-directory: funcoes/quizz
            run: npm install

          - name: Zip Lambda function
            working-directory: funcoes/quizz
            run: zip -r lambda-quizz.zip index.mjs node_modules

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v2
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION }}

          - name: Deploy to AWS Lambda
            working-directory: funcoes/quizz
            run: |
              aws lambda update-function-code \
                --function-name quizz \
                --zip-file fileb://lambda-quizz.zip